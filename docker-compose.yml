services:
  db:
    image: postgres:latest
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app-network

  backend:
    build: .
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: "postgresql://myuser:mypass@db:5432/mydb"
      DOCKER_CONTAINER: "true"
      REDIS_HOST: "redis"
    volumes:
      - ./:/backend
    working_dir: /backend
    env_file:
      - .env
    command: >
      sh -c "pip install --no-cache-dir -r requirements.txt &&
             python -m pip install python-jose[cryptography] passlib[bcrypt] &&
             uvicorn main:app --host 0.0.0.0 --port 8000"
    networks:
      - app-network


  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge


volumes:
  postgres-data:
  redis-data: